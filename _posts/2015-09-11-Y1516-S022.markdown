---
layout: post
title: "Localisation d'erreurs"
date: 2015-09-11 17:08:47
categories: [dispo, al]
pid: Y1516-S022
type: Research
contact: Hélène Collavizza
---
       
Contexte
Valider le logiciel est primordial et peut représenter jusqu'à 70% du temps de conception. Dans l'équipe CeV (Contraintes et Vérification) nous développons un outil basé sur la programmation par contraintes pour la vérification des programmes Java annotés avec des spécifications JML (Java Modeling Language http://www.eecs.ucf.edu/~leavens/JML//index.shtml). En cas de non conformité, nos outils fournissent un contre-exemple c'est à dire des valeurs d'entrées pour lesquelles le programme est incorrect. Actuellement, nous nous intéressons à la localisation des erreurs c'est à dire à identifier dans le programme quelles sont les instructions qui ont causé l'erreur.

Approche
Notre approche se base sur la programmation par contraintes. Étant donné un programme et une propriété P sur ce programme, nous construisons un Graphe de Flôt de Contrôle (CFG) dont les noeuds sont des contraintes correspondant aux blocs du programme. Puis nous parcourons ce graphe, chemin après chemin, pour vérifier que le système contenant les contraintes du chemin et la négation de P n'a pas de solution. Si une solution existe, alors les valeurs correspondantes (valeurs des entrées) sont un contre-exemple puisqu'elles valident la négation de P.  
Si un contre-exemple est trouvé, nous cherchons ensuite à identifier les portions de code qui ont pu causer l'erreur. Pour cela, nous effectuons à nouveau un parcours en profondeur du graphe pour calculer des MCS (Minimal Correction Set) sur les chemins proches du chemin induit par le contre-exemple https://hal.archives-ouvertes.fr/hal-01094227/document.

Objectif
L'objectif de ce projet est d'affiner notre approche en améliorant l'implémentation de l'algorithme de localisation (algorithme de parcours du graphe et algorithme de calcul des MCS). La nouvelle version devra être testée sur un ensemble significatif d'exemples. Selon les résultats, une poursuite en thèse est envisageable.

Résultats attendus

- livrable 1 : créer un visiteur qui étant donné un programme java et un contre-exemple, affiche les contraintes du chemin associé à ce contre-exemple.
- livrable 2 : implémentation de l'algorithme de localisation en utilisant le calcul des MCS standard
- livrable 3 : plate-forme de test
- livrable 4 : amélioration des algorithmes

#### Compétences Requises
Compétences
- savoir étendre une architecture contenant un code Java conséquent et des appels à différents outils externes.
- être à l'aise avec les parcours de graphe
- être à l'aise en compilation pour comprendre comment nous construisons le CFG à partir du code source Java avec l'analyseur JDT d'eclipse  http://www.eclipse.org/jdt/ 
- curiosité et bonne humeur


#### Références

  * Équipe: CEV
  * [https://hal.archives-ouvertes.fr/hal-01094227/document](https://hal.archives-ouvertes.fr/hal-01094227/document)
  * [https://hal.archives-ouvertes.fr/hal-00957255v2/document](https://hal.archives-ouvertes.fr/hal-00957255v2/document)
  * [http://users.polytech.unice.fr/~rueher/Publis/sttt.pdf](http://users.polytech.unice.fr/~rueher/Publis/sttt.pdf)

#### Informations Administratives
  * Contact : Hélène Collavizza <helen@polytech.unice.fr>
  * Identifiant sujet : `Y1516-S022`
  * Type : Research
  * Parcours Recommandés : AL
     