---
layout: post
title: "Transformers"
date: 2017-09-20 20:04:31
categories: [dispo, al]
pid: Y1718-S045
type: Engineering
contact: Sébastien Mosser
---
       
Les outils de réécriture de code (e.g., spoon) travaillent sur l’arbre de syntaxe abstraite d’un langage pour permettre, étant donné un programme d’entrée, produire un nouveau programme. Ces outils sont utilisé dans la réparation automatique de bug, le refactoring, la résolution d’anti-patrons, … La question se posant est : que se passe t’il si plusieurs réécritures ont lieu au même endroit ? Sont elles conflictuelles?

Dans ce projet, on se propose de considérer les opérations de refactoring classique, et de les opérationnaliser sous la forme de règles de réécriture de code. On pourra alors composer ces règles pour proposer des opérations de haut niveau comme “rendre la classe X visitable” ou “rendre Y/Z observer/observable” si on s’intéresse aux patrons de conception. Le point dur sera d’identifier à quel moment les éléments entre en conflit entre eux, à caractériser les types de réécritures, les types de conflit, et à inférer comment les règles peuvent entrer en conflit (statiquement, ou à l'exécution).

Ce projet est une illustration de nos collaborations. Par exemple, dans une collaboration récente avec l’université du Québec à Montréal, à été étudié la réparation d’anti-patron énergétique. On peut automatiquement détecter des erreurs dans du code Android qui vont générer une surconsommation électrique de l’application, et ré-écrire le code pour proposer une version énergétiquement plus intéressante.  


#### Compétences Requises
Génie logiciel
Modélisation, conception


#### Besoins Clients
Un framework permettant de modéliser les réécritures
Un moteur d'exécution permettant de les appliquer
un système de détection de conflits entre règles, lors de l’exécution
un analyseur statique identifiant les conflits entre règles, a la compilation

#### Résultats Attendus
Une preuve de concept répondant aux besoins, au dessus de la JVM (java, scala, …)
On pourra utiliser Spoon pour la réécriture de code
     

#### Informations Administratives
  * Contact : Sébastien Mosser <mosser@i3s.unice.fr>
  * Identifiant sujet : `Y1718-S045`
  * Type : Engineering
  * Parcours Recommandés : AL
  * Équipe: N/A

 blah blah
#### Références
 blah blah


 blah blah
     