---
layout: post
title: "Efficient computing of k nearest neighbors over CAN structured overlay"
date: 2015-09-11 21:55:04
categories: [oqp, gmd,web]
pid: Y1516-S034
type: Research
contact: Justine Rochas
students: Mounir GUIZANI, Farouk JOMAA, Ghassan NAOUIS
group: 19
---

The k nearest neighbors (kNN) is an operation that, for a given point in a data space, finds its k closest points in a set of points S.
The k nearest neighbors join is a costly operation in the sense that, for every point in a set R, all the points in S have to be checked against a distance metric to find close points.
To be efficient and scale to large sets R and S, one have to compute this operation in a distributed environment, such as a cluster or a cloud.
In order to organize data in distributed environments, structured overlays featuring distributed hastables (such as Chord, Pastry, Kademlia, Cassandra and Content Addressable Network),
propose a hash-based dissemination of data held by peers, which guarantees a faster retrievability.

The objective of this PFE is to come with an efficient implementation of kNN over Content Addressable Network (CAN). More precisely, this PFE has three steps:
- The first step is to implement a basic, not optimal, kNN over CAN.
- The second step is to design an optimized kNN algorithm to make the best use of the CAN structure.
- The last step would be eventually to perform a benchmark of the solution in a distributed setting (on a given computing grid).
The students will be provided with several published papers that present kNN over P2P systems, and strategies to disseminate data over a Chord structured overlay.
A preliminary implementation of CAN in Java will be given to the students.
In particular, the given implementation of CAN uses a programming model built on top of Java: peers can be easily distributed and work in parallel thanks to this model.
The students will have to make the best use of this model to implement the optimized version.

This PFE is also supervised by Ludovic Henrio and Fabrice Huet.

#### Compétences Requises
 - have a good background in Java
 - have the ability to integrate new algorithms and new programming paradigms.


#### Références

  * Équipe: Scale
  * [http://www.cs.umd.edu/~hjs/pubs/dgo05.pdf](http://www.cs.umd.edu/~hjs/pubs/dgo05.pdf)
  * [https://hal.inria.fr/hal-00818482/document](https://hal.inria.fr/hal-00818482/document)

#### Informations Administratives
  * Contact : Justine Rochas <justine.rochas@inria.fr>
  * Identifiant sujet : `Y1516-S034`
  * Type : Research
  * Parcours Recommandés : GMD,WEB
     